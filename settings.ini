#### Компенсация фона ####
# входная папка
background_input_folder = data/tests/capillary_all_cap_smolensk/step2_stab/
# кол-во файлов
background_count = 400
# выходная папка
background_output_folder = data/tests/capillary_all_cap_smolensk/backgroundSelector/
# кол-во кадров для усреднения значения яркости в каждую сторону (то есть усреднение current - n .. current + n)
background_blur_depth = 10

#### Выделение центральной линии ####
# входевя папка
middle_input_folder = data/tests/capillary_all_cap_smolensk/backgroundSelector/
# кол-во
middle_count = 400
# выходная папка
middle_output_folder = data/tests/capillary_all_cap_smolensk/middle-line/
# название файла с найденными центральными точками
middle_output_file_name = middle-full-points.txt
# путь до контура
middle_contour = data/tests/capillary_all_cap_smolensk/contour.bmp
# путь до суммы матрицы
middle_sum_matrix = data/tests/capillary_all_cap_smolensk/backgroundSelector/sum.txt
# путь до изображения суммы
middle_sum_image = data/tests/capillary_all_cap_smolensk/backgroundSelector/sum-image.bmp
# координата x начальной точки
middle_point_x = 18
# координата y начальной точки
middle_point_y = 132
# радиус области для нахождения степени рассинхрониации
middle_region_size = 3
# максимальная скорость
middle_max_speed = 8
# лимит отклонения центральной линии от найденной точки, в градусах
middle_angle_limit = 35

#### Трансформация ####
# Путь до файла с центральными точками
transformer_central_points = data/tests/capillary_all_cap_smolensk/middle-line/middle-full-points.txt
# Входная папка
transformer_input_folder = data/tests/capillary_all_cap_smolensk/backgroundSelector/
# Выходная папка
transformer_output_folder = data/tests/capillary_all_cap_smolensk/transformedImages/
# Кол-во файлов
transformer_count = 400
# Контур
transformer_contour = data/tests/capillary_all_cap_smolensk/contour.bmp
# Изображения суммированного капилляра
transformer_sum_image = data/tests/capillary_all_cap_smolensk/backgroundSelector/sum-image.bmp
# Расстояние между отрисованными перпендикулярами
transformer_perpendicular_step = 8
# шаг для построения направления (линия берётся из точек (currentPointIndex - indent; currentPointIndex + indent))
transformer_indent = 4
# размер шага вдоль перпендикуляра
transformer_step_size = 1
# кол-во шагов вдоль перпендикуляра в каждую сторону
transformer_steps_count = 10
# Обрезать ли итоговые изображения по контуру
transformer_truncate_by_contour = false

#### Определение скорости####
## Общие опции ##

# Кол-во кадров
framesNumber = 400
# префикс имён файлов входных данных
input_prefix =
# префикс имён файлов выходных данных
output_prefix =
# путь до входных папки с входными данными
input_folder = data/tests/capillary_all_cap_smolensk/transformedImages
# Ширина матрицы, которая используется для рассчёта средней скорости
affected_cols = 245
# Путь до контура
circuit_image = data/tests/capillary_all_cap_smolensk/contour-final.bmp
# кол-во знаков в имени входных файлов
digits_in_file_name = 5
# Папка, куда пишутся все данные подсчёта скорости
speed_output_folder =  data/tests/capillary_all_cap_smolensk/speed/

## Первый Этап ###

# Кол-во шагов
stepsNumber = 15
# Начальная скорость
startSpeed = 0
# Максимальная скорость
maxSpeed = 15
# радиус области
r = 8
# Шаг оценки области по вертикали
dr = 1
# --
dt = 1

# Размытие по кадрам
s1dn1 = 28
s1dn2 = 10
# По точкам
s1dn1st = 4
s1dn2st = 2
s2dn1 = 6
s2dn2 = 4

# имена файлов, куда запишется результат
speed_output_image = stage1_result-clear.bmp
speed_output_file = stage1_result-clear.txt
# визуализация результата
speed_output_image_with_coefficient = stage1_result.bmp

# Файл, куда пишется изменение средней скорости во времени
middle_output_file =  stage1_middle-speed.txt
middle_output_blur_file = stage1_middle-speed-blur.txt

# Путь до папки с результатом коррелляции
correlation_folder = stage1_step1_output
# Папка с размытием
blur_folder = stage1_blur_output
# Папка с результатом шага
result_folder = result

## Второй этап ##

# Отклонение от средней скорости предыдущего шага
stage2_speed_deviation = 10
# Размер шага
stage2_step_size = 0.5
# радиус области
stage2_r = 8
# Шаг оценки области по вертикали
stage2_dr = 1
# --
stage2_dt = 1

# Размытие по кадрам
stage2_s1dn1 = 28
stage2_s1dn2 = 10
# По точкам
stage2_s1dn1st = 4
stage2_s1dn2st = 2
stage2_s2dn1 = 6
stage2_s2dn2 = 4

# имена файлов, куда запишется результат
stage2_speed_output_image = stage2_result-clear.bmp
stage2_speed_output_file = stage2_result-clear.txt
# визуализация результата
stage2_speed_output_image_with_coefficient = stage2_result.bmp

# Файл, куда пишется изменение средней скорости во времени
stage2_middle_output_file = stage2_middle-speed.txt
stage2_middle_output_blur_file = stage2_middle-speed-blur.txt

# Путь до папки с результатом коррелляции
stage2_correlation_folder = stage2_step1_output
# Путь до папки с размытием
stage2_blur_folder = stage2_blur_output
# Папка с результатом шага
stage2_result_folder = result
